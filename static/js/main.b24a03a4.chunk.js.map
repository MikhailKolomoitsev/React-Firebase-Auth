{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Signup.js","components/Dashboard.js","components/Login.js","components/PrivateRoute.js","components/ForgotPassword.js","components/UpdateProfile.js","components/App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassowrd","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","e","a","preventDefault","current","push","message","Card","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","to","Dashboard","pushState","onClick","Login","PrivateRoute","Component","component","rest","render","props","ForgotPassword","setMessage","UpdateProfile","promises","Promise","all","then","catch","finally","defaultValue","placeholder","App","Container","style","minHeight","maxWidth","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b24a03a4.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\n\r\nconst app = firebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n})\r\n\r\nexport const auth = app.auth()\r\nexport default app\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { auth } from '../firebase'\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [currentUser, setCurrentUser] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    function signup(email, password) {\r\n        return auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function login(email, password) {\r\n        return auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function logout() {\r\n        return auth.signOut()\r\n    }\r\n\r\n    function resetPassword(email) {\r\n        return auth.sendPasswordResetEmail(email)\r\n    }\r\n\r\n    function updateEmail(email) {\r\n        return currentUser.updateEmail(email)\r\n    }\r\n\r\n\r\n    function updatePassowrd(password) {\r\n        return currentUser.updatePassowrd(password)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscriber = auth.onAuthStateChanged(user => {\r\n            setLoading(false)\r\n            setCurrentUser(user)\r\n        })\r\n        return unsubscriber\r\n    }, [currentUser])\r\n\r\n\r\n\r\n    const value = {\r\n        currentUser,\r\n        signup,\r\n        login,\r\n        logout,\r\n        resetPassword,\r\n        updateEmail,\r\n        updatePassowrd\r\n    }\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\n","import React, { useRef, useState } from 'react'\r\nimport { Alert, Button, Card, Form } from 'react-bootstrap'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\nconst Signup = () => {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { signup } = useAuth()\r\n  const [error, setError] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n    try {\r\n      setError('')\r\n      setLoading(true)\r\n      await signup(emailRef.current.value, passwordRef.current.value)\r\n      history.push('/login')\r\n    } catch (error) {\r\n      setError(error.message)\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className='text-center mb-4'>Sing Up</h2>\r\n          {error && <Alert variant='danger'>{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id='email'>\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type='email' ref={emailRef} required />\r\n            </Form.Group>\r\n\r\n            <Form.Group id='password'>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type='password' ref={passwordRef} required />\r\n            </Form.Group>\r\n\r\n            <Form.Group id='password-confirm'>\r\n              <Form.Label>Password-confirm</Form.Label>\r\n              <Form.Control type='password' ref={passwordConfirmRef} required />\r\n            </Form.Group>\r\n\r\n            <Button type='submit' className='w-100' disabled={loading}>SignUp</Button>\r\n\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className='w-100 text-center mt-2'>Already have an account? <Link to='/login'>Log In</Link></div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Signup","import React,{useState} from 'react'\r\nimport { Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link, useHistory } from \"react-router-dom\"\r\n\r\nconst Dashboard = () => {\r\n  const [error, setError] = useState('')\r\n  const { currentUser, logout } = useAuth()\r\n  const history = useHistory()\r\n\r\n  async function handleLogout() {\r\n    setError('')\r\n\r\n    try {\r\n      await logout()\r\n      history.pushState('/login')\r\n    } catch (error) {\r\n      setError(error.message)\r\n    }\r\n    \r\n  }\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className='text-center mb-4'>Profile</h2>\r\n          {error && <Alert variant='danger'>{error}</Alert>}\r\n          <strong>Email: </strong>{currentUser ? currentUser.email : 'not loggedin'}\r\n          <Link to='/update-profile' className='btn btn-primary w-100 mt-3'>Update Profile</Link>\r\n        </Card.Body>\r\n      </Card>\r\n      <Card>\r\n        <div className='w-100 text-center mt-2'>\r\n          <Button variant='link' onClick={handleLogout}>Log Out</Button>\r\n        </div>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Dashboard","import React, { useRef, useState } from 'react'\r\nimport { Alert, Button, Card, Form } from 'react-bootstrap'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\nconst Login = () => {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const { login } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await login(emailRef.current.value, passwordRef.current.value)\r\n            history.push('/')\r\n        } catch (error) {\r\n            setError(error.message)\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className='text-center mb-4'>Log In</h2>\r\n                    {error && <Alert variant='danger'>{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id='email'>\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type='email' ref={emailRef} required />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group id='password'>\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type='password' ref={passwordRef} required />\r\n                        </Form.Group>\r\n\r\n                        <Button type='submit' className='w-100' disabled={loading}>Log In</Button>\r\n                    </Form>\r\n                    <div className='w-100 text-center mt-2'><Link to='/forgot-password'>Forgot Password?</Link></div>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className='w-100 text-center mt-2'>Need an account? <Link to='/signup'>Sign Up</Link></div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Route } from 'react-router-dom'\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n    const {currentUser}=useAuth()\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => {\r\n               return  currentUser ? <Component {...props}/>:<Redirect to='/login'></Redirect>\r\n            }}\r\n        ></Route>\r\n    )\r\n}\r\n\r\nexport default PrivateRoute","import React, { useRef, useState } from 'react'\r\nimport { Alert, Button, Card, Form } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\nconst ForgotPassword = () => {\r\n    const emailRef = useRef()\r\n    const { resetPassword } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n        try {\r\n            setMessage('')\r\n            setError('')\r\n            setLoading(true)\r\n            await resetPassword(emailRef.current.value)\r\n            setMessage('Check your email to follow instructions')\r\n        } catch (error) {\r\n            setError(error.message)\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className='text-center mb-4'>Password Reset</h2>\r\n                    {error && <Alert variant='danger'>{error}</Alert>}\r\n                    {message && <Alert variant='success'>{message}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id='email'>\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type='email' ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Button type='submit' className='w-100' disabled={loading}>Reset Password</Button>\r\n                    </Form>\r\n                    <div className='w-100 text-center mt-2'><Link to='/login'>Log In</Link></div>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className='w-100 text-center mt-2'>Need an account? <Link to='/signup'>Sign Up</Link></div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword","import React, { useRef, useState } from 'react'\r\nimport { Alert, Button, Card, Form } from 'react-bootstrap'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\nconst UpdateProfile = () => {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const { currentUser, updatePassowrd, updateEmail } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError(\"Passwords do not match\")\r\n        }\r\n\r\n        const promises = []\r\n        setLoading(true)\r\n        setError('')\r\n\r\n        if (emailRef.current.value !== currentUser.email) {\r\n            promises.push(updateEmail(emailRef.current.value))\r\n        }\r\n        if (passwordRef.current.value !== currentUser.password) {\r\n            promises.push(updateEmail(passwordRef.current.value))\r\n        }\r\n        Promise.all(promises).then(() => {\r\n            history.push('/')\r\n        }).catch((e) => {\r\n            setError(e.message)\r\n        }).finally(() => {\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className='text-center mb-4'>Update Profile</h2>\r\n                    {error && <Alert variant='danger'>{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id='email'>\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type='email' ref={emailRef} required defaultValue={currentUser.email} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group id='password'>\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type='password' ref={passwordRef} placeholder='Leave blank to keep the same' />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group id='password-confirm'>\r\n                            <Form.Label>Password-confirm</Form.Label>\r\n                            <Form.Control type='password' ref={passwordConfirmRef} placeholder='Leave blank to keep the same' />\r\n                        </Form.Group>\r\n\r\n                        <Button type='submit' className='w-100' disabled={loading}>Update</Button>\r\n\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className='w-100 text-center mt-2'><Link to='/login'>Cancel</Link></div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UpdateProfile","import React from \"react\"\r\nimport Signup from \"./Signup\"\r\nimport { Container } from \"react-bootstrap\"\r\nimport { AuthProvider } from \"../contexts/AuthContext\"\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport Dashboard from \"./Dashboard\"\r\nimport Login from \"./Login\"\r\nimport PrivateRoute from \"./PrivateRoute\"\r\nimport ForgotPassword from \"./ForgotPassword\"\r\nimport UpdateProfile from \"./UpdateProfile\"\r\n\r\nfunction App() {\r\n  return (\r\n\r\n    <Container className=\"d-flex align-items-center justify-content-center\" style={{ minHeight: '100vh' }}>\r\n      <div className=\"w-100\" style={{ maxWidth: 450 }}>\r\n        <Router>\r\n          <AuthProvider>\r\n            <Switch>\r\n              <PrivateRoute exact path='/' component={Dashboard}/>\r\n              <PrivateRoute  path='/update-profile' component={UpdateProfile}/>\r\n              <Route path='/signup' component={Signup}/>\r\n              <Route path='/login' component={Login}/>\r\n              <Route path='/forgot-password' component={ForgotPassword}/>\r\n            </Switch>\r\n          </AuthProvider>\r\n        </Router>\r\n      </div>\r\n    </Container>\r\n\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./components/App\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}